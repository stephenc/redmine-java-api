<project default="build_redmine_api">

	<property file="build.properties" />
	<property name="project_root" value="../.." />
	<property name="src.dir" value="../src/main/java" />
	<property name="src_resources.dir" value="../src/main/resources" />
	<property name="test_project.dir" value="${project_root}/org.alskor.redmine_api.tests" />
	<property name="src_tests.dir" value="${test_project.dir}/src/test/java" />
	<property name="test_resources.dir" value="${test_project.dir}/src/test/resources" />
	<property name="redmine_api.build.dir" value="build" />
	<property name="redmine_api.build.jarfile" value="${redmine_api.build.dir}/${api_jar_file_name}" />
	<property name="junit.jar" value="${project_root}/lib/junit-4.8.2.jar" />

	<property name="build.dir.classes" value="${redmine_api.build.dir}/classes" />
	<property name="lib.dir" value="../lib" />
	
	<property name="httputils_build.dir" value="${project_root}/org.alskor.httputils/target" />
	<property name="httputils_classes.dir" value="${httputils_build.dir}/classes" />
	<property name="TAutils.build.dir" value="${project_root}/com.taskadapter.util/target" />
	<property name="TAutils.classes.dir" value="${TAutils.build.dir}/classes" />
	
	<property name="javadoc.dir" value="../target/site/apidocs" />
	
<!--	<property name="samples.dir" value="${project_root}/redmine_api_sample_project/src" />-->
	
	<path id="redmine_api.classpath">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
		<pathelement location="${httputils_classes.dir}" />
		<pathelement location="${TAutils.classes.dir}" />
	</path>

	<path id="test_classpath">
		<path refid="redmine_api.classpath" />
		<pathelement location="${redmine_api.build.jarfile}" />
		<pathelement location="${redmine_api.build.dir}/tests" />
		<pathelement location="${test_resources.dir}" />
		<pathelement location="${junit.jar}"/>
	</path>

	<target name="build_redmine_api" depends="clean, compile, jar, compile_tests, test, zip" />

	<target name="clean">
		<delete dir="${redmine_api.build.dir}" />
	</target>

	<target name="compile">
		<mkdir dir="${build.dir.classes}" />
		<javac srcdir="${src.dir}" destdir="${build.dir.classes}" classpathref="redmine_api.classpath" />
		<copy todir="${build.dir.classes}">
			<!--			<fileset dir="${src.dir}" excludes="**/*.java" />-->
			<fileset dir="${src_resources.dir}" excludes="**/*.java" />
			<fileset dir="${test_resources.dir}" excludes="**/*.java" />
		</copy>

	</target>

	<target name="compile_tests">
		<mkdir dir="${redmine_api.build.dir}/tests" />
		<javac srcdir="${src_tests.dir}" destdir="${redmine_api.build.dir}/tests">
			<classpath refid="test_classpath" />
		</javac>
	</target>

	<target name="jar">
<!--		<mkdir dir="${redmine_api.build.dir}" />-->
		<jar destfile="${redmine_api.build.dir}/${api_jar_file_name}" basedir="${redmine_api.build.dir}/classes">
			<manifest>
				<attribute name="Class-Path" value="castor-1.3.1/castor-1.3.1-anttasks.jar  
					 castor-1.3.1/castor-1.3.1-codegen.jar 
					 castor-1.3.1/castor-1.3.1-core.jar 
					 castor-1.3.1/castor-1.3.1-ddlgen.jar 
					 castor-1.3.1/castor-1.3.1-jdo.jar 
					 castor-1.3.1/castor-1.3.1-xml-schema.jar 
					 castor-1.3.1/castor-1.3.1-xml.jar 
					 castor-1.3.1/castor-1.3.1.jar 
					 castor-1.3.1/jta1.0.1.jar 
					 commons-logging-1.1.1/commons-logging-1.1.1-javadoc.jar 
					 commons-logging-1.1.1/commons-logging-1.1.1.jar
					 commons-logging-1.1.1/commons-logging-adapters-1.1.1.jar
					 commons-logging-1.1.1/commons-logging-api-1.1.1.jar"/>
			</manifest>
		</jar>
	</target>

	<target name="test">
		<!-- Capture the path as a delimited property using the refid attribute -->
		<!--			<property name="myclasspath" refid="test_classpath"/>
				<echo message="${myclasspath}"/> -->

		<junit printsummary="withOutAndErr" haltonfailure="yes" showoutput="yes">
			<classpath refid="test_classpath" />
			<formatter type="plain" />
			<!--			<batchtest fork="yes" todir="${reports.tests}">-->
			<batchtest>
				<fileset dir="${redmine_api.build.dir}/tests">
					<include name="**/*Test*class" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="zip">
		<zip destfile="${redmine_api.build.dir}/${distributive_file_name}" >
			<fileset dir="${redmine_api.build.dir}" includes="${api_jar_file_name}"/>
			<fileset dir=".." includes="lib/**/*"/>
			<fileset dir="${project_root}" includes="licenses.cmd"/>
			<fileset dir="${project_root}" includes="licenses.sh"/>
			<zipfileset dir="${httputils_build.dir}" includes="*.jar" prefix="lib"/>
			<zipfileset dir="${TAutils.build.dir}" includes="*.jar" prefix="lib"/>
<!--			<zipfileset dir="${samples.dir}" includes="*.java" prefix="sample"/> -->
			
			<zipfileset dir="${javadoc.dir}" includes="*" prefix="javadoc"/>
			
			<fileset dir="../doc" includes="**/*"/>
		</zip>
	</target>
</project>